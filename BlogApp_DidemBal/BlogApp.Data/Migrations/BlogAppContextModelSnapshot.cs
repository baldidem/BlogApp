// <auto-generated />
using System;
using BlogApp.Data.Concrete.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogApp.Data.Migrations
{
    [DbContext(typeof(BlogAppContext))]
    partial class BlogAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("BlogApp.Entity.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Didem",
                            Description = "Life is so good. I'm so glad that i love life description",
                            ImageUrl = "1.jpg",
                            IsHome = true,
                            Summary = "Life is so good. I'm so glad that i love life",
                            Title = "Life is good",
                            UploadDate = new DateTime(2022, 12, 21, 22, 9, 22, 698, DateTimeKind.Local).AddTicks(71)
                        },
                        new
                        {
                            Id = 2,
                            Author = "John",
                            Description = "Music is everything for any kind of living being description.",
                            ImageUrl = "2.jpg",
                            IsHome = true,
                            Summary = "Music is everything for any kind of living being.",
                            Title = "Music is everything",
                            UploadDate = new DateTime(2022, 12, 23, 22, 9, 22, 698, DateTimeKind.Local).AddTicks(86)
                        },
                        new
                        {
                            Id = 3,
                            Author = "Emily",
                            Description = "We need to do sports for living a long and healthy life description",
                            ImageUrl = "3.jpg",
                            IsHome = false,
                            Summary = "We need to do sports for living a long and healthy life",
                            Title = "Sport is crucial",
                            UploadDate = new DateTime(2022, 12, 25, 22, 9, 22, 698, DateTimeKind.Local).AddTicks(88)
                        },
                        new
                        {
                            Id = 4,
                            Author = "Marcus",
                            Description = "Living life is a kind of art even if we don't realize description",
                            ImageUrl = "4.jpg",
                            IsHome = true,
                            Summary = "Living life is a kind of art even if we don't realize",
                            Title = "Living life",
                            UploadDate = new DateTime(2022, 12, 27, 22, 9, 22, 698, DateTimeKind.Local).AddTicks(89)
                        },
                        new
                        {
                            Id = 5,
                            Author = "Angelica",
                            Description = "We need to stay away from toxic positivity description",
                            ImageUrl = "5.jpg",
                            IsHome = false,
                            Summary = "We need to stay away from toxic positivity.",
                            Title = "Being Positive",
                            UploadDate = new DateTime(2022, 12, 29, 22, 9, 22, 698, DateTimeKind.Local).AddTicks(90)
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.BlogCategory", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            BlogId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            BlogId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            BlogId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            BlogId = 5,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Life"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Music"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Sports"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Psychology"
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.BlogCategory", b =>
                {
                    b.HasOne("BlogApp.Entity.Blog", "Blog")
                        .WithMany("BlogCategories")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogApp.Entity.Category", "Category")
                        .WithMany("BlogCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogApp.Entity.Blog", b =>
                {
                    b.Navigation("BlogCategories");
                });

            modelBuilder.Entity("BlogApp.Entity.Category", b =>
                {
                    b.Navigation("BlogCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
